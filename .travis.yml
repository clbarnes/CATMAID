dist: trusty
sudo: required
notifications:
  email: false
language: python
cache: pip
python:
  - "2.7"
  - "3.5"
  - "pypy-5.7.1"
addons:
  chrome: stable
  apt:
    sources:
    - precise-pgdg-9.5
    packages:
    - postgresql-9.5
    - postgresql-contrib-9.5
  postgresql: 9.5
  sauce_connect:
    username: catmaid
  jwt:
    secure: "hj6rvwzab8ptfMKvRyqCZnWqun2uEv69nLCGxLXiDk9QZOUv/UG8PU060m6DTHtYE8iJw5E6qhTIhLKlpPadYptkxmiOXVGKlU6jam8SLKsSbHbdFsoziIPnU4mpqNgjvZ7Xb7xoTmYcd15G7Du3qgTHc28TeT5F9XnyfyDCH7M="
before_install:
  - mkdir tmp
  - travis_retry sudo apt-get update -y -qq
install:
  - travis_retry sudo apt-get install -y -qq $(< packagelist-ubuntu-14.04-apt.txt)
  - travis_retry python -m pip install -U pip
  - travis_retry travis_wait 60 pip install -q -r django/requirements.txt
  - pip list
  # Install additional dependencies for Travis
  - pip install -q -r django/requirements-test.txt
  - pip install coveralls flake8
  - npm install jshint csslint jsdoc karma karma-chrome-launcher karma-qunit karma-sinon qunitjs sinon
  - npm bin
  - export PATH=$(npm bin):$PATH
before_script:
  - sudo cp /etc/postgresql/9.4/main/pg_hba.conf /etc/postgresql/9.5/main/pg_hba.conf
  - sudo /etc/init.d/postgresql restart
  - psql -c 'CREATE DATABASE catmaid;' -U postgres
  - psql -c 'CREATE EXTENSION postgis;' -U postgres catmaid
  - export CATMAID_PATH=$(pwd)
  - cd django
  - cp configuration.py.example configuration.py
  - sed -i -e "s?^\(abs_catmaid_path = \).*?\1'$(echo $CATMAID_PATH)'?g" configuration.py
  - sed -i -e "s?^\(abs_virtualenv_python_library_path = \).*?\1'$(echo $VIRTUAL_ENV)'?g" configuration.py
  - sed -i -e "s?^\(catmaid_database_name = \).*?\1'catmaid'?g" configuration.py
  - sed -i -e "s?^\(catmaid_database_username = \).*?\1'postgres'?g" configuration.py
  - sed -i -e "s?^\(catmaid_timezone = \).*?\1'America/New_York'?g" configuration.py
  - sed -i -e "s?^\(catmaid_servername = \).*?\1'localhost:8000'?g" configuration.py
  - cat configuration.py
  - python create_configuration.py
  - sed -i -e "s?^\(ALLOWED_HOSTS = \).*?\1['*']?g" projects/mysite/settings.py
  # Enable static file serving without DEBUG = True
  - echo "SERVE_STATIC = True" >> projects/mysite/settings.py
  # Disable cache-busting for front-end tests
  - echo "STATICFILES_STORAGE = 'pipeline.storage.PipelineStorage'" >> projects/mysite/settings.py
  # Enable front-end tess
  - echo "FRONT_END_TESTS_ENABLED = True" >> projects/mysite/settings.py
  # Enable Selenium GUI tests, this currently works only with non-hash file names.
  - echo "GUI_TESTS_ENABLED = True" >> projects/mysite/settings.py
  - echo "GUI_TESTS_REMOTE = True" >> projects/mysite/settings.py
  # Show full front-end errors by default
  - echo "EXPAND_FRONTEND_ERRORS = True" >> projects/mysite/settings.py
  - cat projects/mysite/settings.py
  - cd ..
script:
  - flake8 --config=.travis.flake8 --statistics --count --exit-zero -q -q django
  - jshint --config=.travis.jshintrc --exclude-path=.travis.jshintignore django/applications
  - $TRAVIS_BUILD_DIR/node_modules/.bin/jsdoc -r django/applications/catmaid/static/js
  - cd django/applications/catmaid/static/css
  - $TRAVIS_BUILD_DIR/node_modules/.bin/csslint .
  - cd $TRAVIS_BUILD_DIR
  - cd django/projects
  - python manage.py migrate --noinput
  - python manage.py collectstatic --link --noinput
  - coverage run manage.py test catmaid.tests
  # Remove login requirement from QUnit test page
  - sed -i 's/login_required(\([^)]*\))/\1/g' ../applications/catmaid/urls.py
  - python manage.py runserver &
  - sleep 5
  - cd ../..
  # Run QUnit through karma in headless Chrom
  - karma start karma.conf.js
after_success:
  - cd django/projects && coveralls
